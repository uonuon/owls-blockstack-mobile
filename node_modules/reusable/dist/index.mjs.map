{"version":3,"file":"index.mjs","sources":["../src/reusable.ts","../src/shallow-equal.ts","../src/react-reusable.tsx"],"sourcesContent":["export type HookFn<HookValue = any> = () => HookValue;\nexport type StoreValueChangeCallback<HookValue> = (value: HookValue) => void;\nexport type StoresChangeCallback = () => void;\n\nexport class Store<HookValue = any> {\n  name: string;\n  subscribers: StoreValueChangeCallback<HookValue>[] = [];\n  cachedValue: HookValue | null = null;\n  constructor(private fn: HookFn<HookValue>) {\n    this.name = fn.name || 'Store';\n  }\n\n  getCachedValue() {\n    return this.cachedValue as HookValue;\n  }\n\n  useValue() {\n    this.cachedValue = this.fn();\n\n    return this.cachedValue as HookValue;\n  }\n\n  subscribe(callback: StoreValueChangeCallback<HookValue>) {\n    this.subscribers = [...this.subscribers, callback];\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub !== callback)\n    }\n  }\n\n  notify() {\n    this.subscribers.forEach(sub => sub(this.cachedValue as HookValue));\n  }\n}\n\nexport class Container {\n  stores = new Map<HookFn, Store>();\n  subscribers: StoresChangeCallback[] = [];\n  onStoresChanged(callback: StoresChangeCallback) {\n    this.subscribers = [...this.subscribers, callback];\n    return () => {\n      this.subscribers = this.subscribers.filter(item => item !== callback);\n    }\n  }\n  createStore(fn: HookFn) {\n    if (this.stores.has(fn)) {\n      throw new Error('Store already exist');\n    }\n    const store = new Store(fn);\n    this.stores.set(fn, store);\n    this.notifyStoresChanged();\n\n    return store;\n  }\n  getStore<HookValue>(fn: HookFn<HookValue>):Store<HookValue> {\n    if (!this.stores.has(fn)) {\n      throw new Error('Store doesn\\'t exist');\n    }\n    return <Store<HookValue>>this.stores.get(fn);\n  }\n  notifyStoresChanged() {\n    this.subscribers.forEach(sub => sub());\n  }\n  getStoresArray() {\n    const storesArray: Store<any>[] = [];\n\n    this.stores.forEach((store) => {\n      storesArray.push(store);\n    })\n    return storesArray;\n  }\n}\nexport const createContainer = () => new Container();\nlet defaultContainer = new Container();\nexport const getContainer = () => defaultContainer;\nexport const replaceContainer = (mockedContainer: Container) => defaultContainer = mockedContainer;\n","const hasOwn = Object.prototype.hasOwnProperty\n\nfunction is(x: any, y: any) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y\n  } else {\n    return x !== x && y !== y\n  }\n}\n\nexport type AreEqual<Value> = (a: Value, b: Value) => boolean;\n\nexport function shallowEqual(objA: any, objB: any) {\n  if (is(objA, objB)) return true\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false\n  }\n\n  const keysA = Object.keys(objA)\n  const keysB = Object.keys(objB)\n\n  if (keysA.length !== keysB.length) return false\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false\n    }\n  }\n\n  return true\n}\n","import * as React from 'react';\nimport { FunctionComponent, useState, useContext, useEffect } from 'react';\nimport { shallowEqual, AreEqual } from './shallow-equal';\nimport { Container, getContainer, Store as StoreClass, HookFn } from './reusable';\n\nconst ReusableContext = React.createContext<Container | null>(null);\n\nexport const ReusableProvider: FunctionComponent<{}> = ({ children }) => (\n  <ReusableContext.Provider value={getContainer()}>\n    <React.Fragment>\n      <Stores />\n      {children}\n    </React.Fragment>\n  </ReusableContext.Provider>\n);\nObject.defineProperty(ReusableProvider,'displayName', { value: 'ReusableProvider' });\n\nconst componentCache = new Map();\n\nconst createStoreComponent = (store: StoreClass<any>) => {\n  if (!componentCache.has(store)) {\n\n    const Component = React.memo(() => {\n      store.useValue();\n      \n      useEffect(() => store.notify(), [store.cachedValue]);\n      \n      return null;\n    });\n    \n    Object.defineProperty(Component,'name', { value: store.name });\n\n    componentCache.set(store, Component);\n  }\n    \n  return componentCache.get(store);\n};\n\nconst useContainer = () => {\n  const container = useContext(ReusableContext) as Container;\n\n  if (container === null) {\n    throw new Error('Are you trying to use Reusable without a ReusableProvider?');\n  }\n\n  return container;\n}\n\nconst Stores = () => {\n  const container = useContainer();\n  const [stores, setStores] = useState(() => container.getStoresArray());\n\n  useEffect(() => {\n    return container.onStoresChanged(() => {\n      setStores(container.getStoresArray());\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      {stores.map((store: StoreClass<any>, index: number) => {\n        const StoreComponent = createStoreComponent(store);\n\n        return <StoreComponent key={index} store={store}/>;\n      })}\n    </React.Fragment>\n  )\n}\nObject.defineProperty(Stores,'displayName', { value: 'Stores' });\n\ntype SelectorFn<HookValue, SelectorValue> = (val: HookValue) => SelectorValue;\nconst identity = (val: any) => val;\n\nfunction useStore<HookValue, SelectorValue>(\n  fn: HookFn<HookValue>,\n  selector: SelectorFn<HookValue, SelectorValue>,\n  areEqual:AreEqual<SelectorValue>\n) {\n  const store = useContainer().getStore<HookValue>(fn);\n  React.useDebugValue('reusable');\n  const [localCopy, setLocalCopy] = useState<SelectorValue>(() => selector(store.getCachedValue()));\n\n  useEffect(() => {\n    return store.subscribe((newValue) => {\n      const selectedNewValue = selector(newValue);\n\n      if (!areEqual(selectedNewValue, localCopy)) {\n        setLocalCopy(() => selectedNewValue);\n      }\n    });\n  }, [store, localCopy, selector, areEqual]);\n\n  return localCopy;\n}\n\nexport function createStore<HookValue>(fn: HookFn<HookValue>) {\n  const store = getContainer().createStore(fn);\n\n  // overload return function:\n  function useStoreHook(): HookValue;\n\n  function useStoreHook<SelectorValue = HookValue>(\n    selector?: SelectorFn<HookValue, SelectorValue>,\n    areEqual?: AreEqual<SelectorValue>\n  ): SelectorValue;\n\n  function useStoreHook<SelectorValue = HookValue>(\n    selector?: SelectorFn<HookValue, SelectorValue>,\n    areEqual?: AreEqual<SelectorValue>\n  ) {\n    React.useDebugValue(store.name);  \n\n    return useStore(fn, selector || identity, areEqual || shallowEqual);\n  }\n  return useStoreHook;\n}\n\n// TBD:\n// export const reusableReducer = (reducer, initialValue, init, options) => {\n//   const fn = () => useReducer(reducer, initialValue, init);\n\n//   getStore().createUnit(fn, options);\n//   return (selector, areEqual) => useStore(fn, selector, areEqual);\n// };\n\n// export const reusableState = (init, options) => {\n//   const fn = () => useState(init);\n\n//   getStore().createUnit(fn, options);\n//   return (selector, areEqual) => useStore(fn, selector, areEqual);\n// };\n"],"names":["Store","constructor","fn","name","getCachedValue","this","cachedValue","useValue","subscribe","callback","subscribers","filter","sub","notify","forEach","Container","Map","onStoresChanged","item","createStore","stores","has","Error","store","set","notifyStoresChanged","getStore","get","getStoresArray","storesArray","push","createContainer","defaultContainer","getContainer","replaceContainer","mockedContainer","hasOwn","Object","prototype","hasOwnProperty","is","x","y","shallowEqual","objA","objB","keysA","keys","keysB","length","let","i","call","const","ReusableContext","React","ReusableProvider","ref","Provider","value","Stores","children","defineProperty","componentCache","useContainer","container","useContext","useState","useEffect","setStores","map","index","StoreComponent","Component","createStoreComponent","key","identity","val","selector","areEqual","newValue","selectedNewValue","localCopy","setLocalCopy","useStore"],"mappings":"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"}