{"version":3,"file":"reusable.js","sources":["../src/reusable.js","../src/shallow-equal.js","../src/react-reusable.js"],"sourcesContent":["class Unit {\n  subscribers = [];\n  cachedValue = null;\n  constructor(fn) {\n    this.fn = fn;\n  }\n\n  getValue() {\n    return this.cachedValue;\n  }\n\n  run() {\n    this.cachedValue = this.fn();\n    return this.cachedValue;\n  }\n\n  subscribe(callback) {\n    this.subscribers = [...this.subscribers, callback];\n    return () => {\n      this.subscribers = this.subscribers.filter(sub => sub !== callback)\n    }\n  }\n\n  notify() {\n    this.subscribers.forEach(sub => sub(this.cachedValue));\n  }\n}\n\nclass Store {\n  units = new Map();\n  subscribers = [];\n  onUnitsChanged(callback) {\n    this.subscribers = [...this.subscribers, callback];\n    return () => this.subscribers = this.subscribers.filter(item => item !== callback);\n  }\n  createUnit(fn) {\n    if (this.units.has(fn)) {\n      throw new Error('Unit already exist', fn);\n    }\n    const unit = new Unit(fn);\n    this.units.set(fn, unit);\n    this.notifyUnitsChanged();\n  }\n  getUnit(fn) {\n    if (!this.units.has(fn)) {\n      throw new Error('Unit doesn\\'t exist', fn);\n    }\n    return this.units.get(fn);\n  }\n  notifyUnitsChanged() {\n    this.subscribers.forEach(sub => sub());\n  }\n  getUnitsArray() {\n    const unitsArray = [];\n\n    this.units.forEach((unit) => {\n      unitsArray.push(unit);\n    })\n    return unitsArray;\n  }\n}\nexport const createStore = () => new Store();\nlet defaultStore = new Store();\nexport const getStore = () => defaultStore;\nexport const replaceStore = (mockedStore) => defaultStore = mockedStore;\n","const hasOwn = Object.prototype.hasOwnProperty\n\nfunction is(x, y) {\n  if (x === y) {\n    return x !== 0 || y !== 0 || 1 / x === 1 / y\n  } else {\n    return x !== x && y !== y\n  }\n}\n\nexport function shallowEqual(objA, objB) {\n  if (is(objA, objB)) return true\n\n  if (\n    typeof objA !== 'object' ||\n    objA === null ||\n    typeof objB !== 'object' ||\n    objB === null\n  ) {\n    return false\n  }\n\n  const keysA = Object.keys(objA)\n  const keysB = Object.keys(objB)\n\n  if (keysA.length !== keysB.length) return false\n\n  for (let i = 0; i < keysA.length; i++) {\n    if (!hasOwn.call(objB, keysA[i]) || !is(objA[keysA[i]], objB[keysA[i]])) {\n      return false\n    }\n  }\n\n  return true\n}\n","import React, { useState, useContext, useEffect } from \"react\";\nimport {shallowEqual} from './shallow-equal';\nimport {getStore} from './reusable';\n\nconst ReusableContext = React.createContext();\nexport const ReusableProvider = ({ children }) => {\n  return (\n    <ReusableContext.Provider value={getStore()}>\n      <React.Fragment>\n        <Units/>\n        {children}\n      </React.Fragment>\n    </ReusableContext.Provider>\n  );\n};\n\nconst Unit = ({ unit }) => {\n  unit.run();\n\n  useEffect(() => unit.notify(), [unit.cachedValue]);\n\n  return null;\n}\n\nconst useStore = () => {\n  const store = useContext(ReusableContext);\n  if (store === undefined) {\n    throw new Error('Are you trying to use Reusable without a ReusableProvider?');\n  }\n  return store;\n}\n\nconst Units = () => {\n  const store = useStore();\n  const [units, setUnits] = useState(() => store.getUnitsArray());\n\n  useEffect(() => {\n    return store.onUnitsChanged(() => {\n      setUnits(store.getUnitsArray());\n    });\n  }, []);\n\n  return (\n    <React.Fragment>\n      {units.map((unit, index) => <Unit key={index} unit={unit}/>)}\n    </React.Fragment>\n  )\n}\nconst identity = val => val;\nconst useReuse = (fn, selector = identity, areEqual = shallowEqual) => {\n  const unit = useStore().getUnit(fn);\n  const [localCopy, setLocalCopy] = useState(() => selector(unit.getValue()));\n  \n  useEffect(() => {\n    return unit.subscribe((newValue) => {\n      const selectedNewValue = selector(newValue);\n      if (!areEqual(selectedNewValue, localCopy)) {\n        setLocalCopy(() => selectedNewValue);\n      }\n    });\n  }, [unit, localCopy, selector, areEqual]);\n\n  return localCopy;\n}\n\nexport const reusable = (fn) => {\n  getStore().createUnit(fn);\n\n  return (selector, areEqual) => useReuse(fn, selector, areEqual);\n}\n\n// TBD:\n// export const reusableReducer = (reducer, initialValue, init, options) => {\n//   const fn = () => useReducer(reducer, initialValue, init);\n\n//   getStore().createUnit(fn, options);\n//   return (selector, areEqual) => useReuse(fn, selector, areEqual);\n// };\n\n// export const reusableState = (init, options) => {\n//   const fn = () => useState(init);\n\n//   getStore().createUnit(fn, options);\n//   return (selector, areEqual) => useReuse(fn, selector, areEqual);\n// };\n"],"names":["Unit","constructor","fn","subscribers","cachedValue","getValue","this","run","subscribe","callback","filter","sub","notify","forEach","Store","units","Map","onUnitsChanged","item","createUnit","has","Error","unit","set","notifyUnitsChanged","getUnit","get","getUnitsArray","unitsArray","push","defaultStore","getStore","hasOwn","Object","prototype","hasOwnProperty","is","x","y","shallowEqual","objA","objB","keysA","keys","keysB","length","let","i","call","const","ReusableContext","React","createContext","ref","useEffect","useStore","store","useContext","undefined","Units","useState","setUnits","Fragment","map","index","key","identity","val","mockedStore","Provider","value","children","selector","areEqual","newValue","selectedNewValue","localCopy","setLocalCopy","useReuse"],"mappings":"gFAAMA,EAGJC,SAAYC,QAFZC,YAAc,QACdC,YAAc,UAEPF,GAAKA,GAGZG,YAAAA,2BACSC,KAAKF,aAGdG,YAAAA,2BACOH,YAAcE,KAAKJ,KACjBI,KAAKF,aAGdI,YAAAA,mBAAUC,0BACHN,YAAkBG,yBAAkBG,iBAElCN,YAAcG,EAAKH,YAAYO,gBAAOC,UAAOA,IAAQF,MAI9DG,YAAAA,kCACOT,YAAYU,iBAAQF,UAAOA,EAAIL,EAAKF,gBAI7C,IAAMU,kBACJC,MAAQ,IAAIC,SACZb,YAAc,IACdc,YAAAA,wBAAeR,0BACRN,YAAkBG,yBAAkBG,sBAC5BH,EAAKH,YAAcG,EAAKH,YAAYO,gBAAOQ,UAAQA,IAAST,MAE3EU,YAAAA,oBAAWjB,MACLI,KAAKS,MAAMK,IAAIlB,SACX,IAAImB,MAAM,qBAAsBnB,OAElCoB,EAAO,IAAItB,EAAKE,QACjBa,MAAMQ,IAAIrB,EAAIoB,QACdE,sBAEPC,YAAAA,iBAAQvB,OACDI,KAAKS,MAAMK,IAAIlB,SACZ,IAAImB,MAAM,qBAAuBnB,UAElCI,KAAKS,MAAMW,IAAIxB,IAExBsB,YAAAA,mCACOrB,YAAYU,iBAAQF,UAAOA,OAElCgB,YAAAA,6BACQC,EAAa,eAEdb,MAAMF,iBAASS,GAClBM,EAAWC,KAAKP,KAEXM,GAGX,IACIE,EAAe,IAAIhB,EACViB,oBAAiBD,GC/DxBE,EAASC,OAAOC,UAAUC,eAEhC,SAASC,EAAGC,EAAGC,UACTD,IAAMC,EACK,IAAND,GAAiB,IAANC,GAAW,EAAID,GAAM,EAAIC,EAEpCD,GAAMA,GAAKC,GAAMA,EAIrB,SAASC,EAAaC,EAAMC,MAC7BL,EAAGI,EAAMC,GAAO,OAAO,KAGT,iBAATD,GACE,OAATA,GACgB,iBAATC,GACE,OAATA,SAEO,MAGHC,EAAQT,OAAOU,KAAKH,GACpBI,EAAQX,OAAOU,KAAKF,MAEtBC,EAAMG,SAAWD,EAAMC,OAAQ,OAAO,MAErCC,IAAIC,EAAI,EAAGA,EAAIL,EAAMG,OAAQE,QAC3Bf,EAAOgB,KAAKP,EAAMC,EAAMK,MAAQX,EAAGI,EAAKE,EAAMK,IAAKN,EAAKC,EAAMK,YAC1D,SAIJ,EC7BTE,IAAMC,EAAkBC,EAAMC,gBAYxBpD,WAAQqD,uBACZ/B,EAAKf,MAEL+C,8BAAgBhC,EAAKV,UAAU,CAACU,EAAKlB,cAE9B,MAGHmD,iBACEC,EAAQC,aAAWP,WACXQ,IAAVF,QACI,IAAInC,MAAM,qEAEXmC,GAGHG,iBACEH,EAAQD,MACYK,6BAAeJ,EAAM7B,uCAE/C2B,8BACSE,EAAMvC,0BACX4C,EAASL,EAAM7B,oBAEhB,IAGDwB,gBAACA,EAAMW,cACL/C,EAAOgD,aAAKzC,EAAM0C,UAAUb,gBAACnD,GAAKiE,IAAKD,EAAO1C,KAAMA,QAIpD4C,WAAWC,UAAOA,yCFaS,IAAIrD,oDAGRsD,UAAgBtC,EAAesC,qCE3D3Bf,2BAE7BF,gBAACD,EAAgBmB,UAASC,MAAOvC,KAC/BoB,gBAACA,EAAMW,cACLX,gBAACQ,QACAY,+BAuDgBrE,UACvB6B,IAAWZ,WAAWjB,YAEdsE,EAAUC,mBAnBFvE,EAAIsE,EAAqBC,kBAAVP,kBAAqB3B,OAC9CjB,EAAOiC,IAAW9B,QAAQvB,KACE0D,6BAAeY,EAASlD,EAAKjB,mCAE/DiD,8BACShC,EAAKd,mBAAWkE,OACfC,EAAmBH,EAASE,GAC7BD,EAASE,EAAkBC,IAC9BC,oBAAmBF,OAGtB,CAACrD,EAAMsD,EAAWJ,EAAUC,IAExBG,EAMwBE,CAAS5E,EAAIsE,EAAUC"}